@inject IJSRuntime JSRuntime

@code {
    #region Inject and JavaScript

    /// <summary>
    /// The dotnet object reference
    /// </summary>
    private DotNetObjectReference<BrowserDetect>? dotNetObjectRef;

    #endregion
    #region Parameters
    [Parameter]
    public BrowserInfo? browserInfo { get; set; }

    [Parameter]
    public EventCallback<BrowserInfo> BrowserInfoChanged { get; set; }

    [Parameter]
    public EventCallback<string> OSVersionUpdate { get; set; }

    [Parameter]
    public EventCallback<string> OSArchitectureUpdate { get; set; }
    #endregion

    protected BrowserDetectJsInterop? JSModule { get; private set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            JSModule = new BrowserDetectJsInterop(JSRuntime);

            dotNetObjectRef ??= DotNetObjectReference.Create(this);

            browserInfo = await JSModule.BrowserInfo(dotNetObjectRef);
            await BrowserInfoChanged.InvokeAsync(browserInfo);
        }
    }

    [JSInvokable]
    public async Task OSUpdateString(string version)
    {
        await OSVersionUpdate.InvokeAsync(version);
        await InvokeAsync(StateHasChanged);
    }

    [JSInvokable]
    public async Task OSArchitectureUpdateString(string cpu)
    {
        await OSArchitectureUpdate.InvokeAsync(cpu);
        await InvokeAsync(StateHasChanged);
    }
}